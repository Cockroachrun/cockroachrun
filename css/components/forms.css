/* Form Elements */
/* Add/fix button styling to match the reference image */
.button-stack {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  gap: 10px;
  margin-top: 20px;
}

#start-game-button, #back-from-character {
  width: 100%;
  padding: 12px 0;
  background-color: transparent;
  border: 1px solid #FF9000;
  color: #FF9000;
  font-family: 'Orbitron', sans-serif;
  font-size: 16px;
  text-transform: uppercase;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

#start-game-button {
  background-color: transparent;
}

#start-game-button:hover {
  background-color: #FF9000;
  color: black;
}

#back-from-character {
  background-color: transparent;
}

#back-from-character:hover {
  background-color: rgba(255, 144, 0, 0.2);
}

.styled-dropdown {
    appearance: none;
    background-color: rgba(0, 0, 0, 0.85);
    padding: 10px 16px;
    width: 100%;
    font-family: var(--font-body);
    font-size: 1rem;
    cursor: pointer;
    outline: none;
    transition: all 0.2s ease;
    box-shadow: 0 0 8px rgba(255, 165, 0, 0.1);
}

.styled-dropdown:hover {
    background-color: rgba(255, 165, 0, 0.1);
    border-color: var(--orange);
    box-shadow: 0 0 12px rgba(255, 165, 0, 0.2);
}

.styled-dropdown:focus {
    background-color: rgba(0, 0, 0, 0.95);
    border-color: var(--orange);
    box-shadow: 0 0 15px rgba(255, 165, 0, 0.3);
}

/* Style the dropdown arrow */
.styled-dropdown::-ms-expand {
    display: none;
}

.styled-dropdown {
    background-position: calc(100% - 20px) calc(1em + 2px),
                       calc(100% - 15px) calc(1em + 2px);
    background-size: 5px 5px,
                    5px 5px;
    background-repeat: no-repeat;
}

/* Style dropdown options */
.styled-dropdown option {
    background-color: rgba(0, 0, 0, 0.95);
    color: var(--text-color);
    padding: 10px;
}

/* Style the visible trigger */
.custom-dropdown-wrapper {
  position: relative; /* Required for absolute positioning */
  width: 55%; /* Reduced width to match red line */
  z-index: 100; /* Ensure it appears above other elements */
}

.custom-dropdown-trigger {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 20px 4px 8px; /* Reduced padding */
  background-color: var(--button-bg); /* Use existing dark background variable */
  border: 1px solid var(--orange); /* Use existing orange variable for border */
  color: var(--orange); /* Use existing orange variable for text */
  cursor: pointer;
  font-family: var(--font-primary);
  width: 100%;
  font-size: 0.9em; /* Slightly smaller font */
}

/* Add pseudo-element for the arrow */
.custom-dropdown-trigger::after {
  content: '';
  position: absolute;
  top: 50%;
  right: 12px; /* Position arrow on the right */
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 6px solid var(--orange); /* Arrow color */
  pointer-events: none; /* Prevent arrow from interfering */
  transition: border-top-color 0.2s ease;
}

.custom-dropdown-trigger:hover {
   background-color: rgba(0, 0, 0, 0.9); /* Darker black on hover */
   border-color: var(--orange); /* Use existing orange variable */
}

/* Style the arrow on hover */
.custom-dropdown-trigger:hover::after {
   border-top-color: var(--orange); /* Keep arrow orange on hover, or change if desired */
}

.custom-dropdown-trigger:focus {
  outline: 2px solid var(--orange); /* Use existing orange variable */
  outline-offset: 2px;
  border-color: var(--orange); /* Match focus outline (use orange) */
  background-color: rgba(0, 0, 0, 0.9); /* Keep dark hover style on focus */
}

/* Make positioning rules for dropdown options list */
.custom-options-list {
  position: absolute;
  top: 100%; /* Position directly below the trigger */
  left: 0;   /* Align with the left edge of the trigger */
  right: 0; /* Make it full width of wrapper */
  width: 100%; /* Ensure dropdown matches trigger width */
  z-index: 10; /* Ensure it's above other elements */
  background-color: var(--dark-bg); /* Use existing darkest background */
  border: 1px solid var(--orange); /* Use existing orange variable */
  border-top: none; /* Avoid double border */
  list-style: none;
  padding: 0;
  margin: 0;
  max-height: 0; /* Hidden by default */
  opacity: 0;
  overflow: hidden;
  visibility: hidden;
  transition: max-height 0.3s ease-out, opacity 0.3s ease-out, visibility 0s linear 0.3s; /* Transition for dropdown */
}

/* Style for when the dropdown is visible */
.custom-options-list.visible {
  max-height: 120px; /* Reduced max height */
  opacity: 1;
  visibility: visible !important; /* Force visibility with !important */
  display: block;
  transition: max-height 0.2s ease-in, opacity 0.2s ease-in, visibility 0s linear 0s;
  z-index: 1000; /* Ensure it appears on top */
}

/* Individual options */
.custom-option {
  padding: 4px 8px; /* Reduced padding */
  color: var(--orange); /* Use existing orange variable */
  background-color: var(--dark-bg); /* Use existing dark background */
  cursor: pointer;
  transition: background-color 0.1s ease, color 0.1s ease;
  font-family: var(--font-primary);
  font-size: 0.9em; /* Slightly smaller font */
}

/* Hover/Focus state for options */
.custom-option:hover,
.custom-option:focus {
  background-color: #000000; /* Solid black background */
  color: var(--light-orange); /* Use existing light orange on hover */
  outline: none; /* Remove default focus outline if needed */
}

/* Visually hide the original <select> while keeping it functional */
.original-select {
  position: absolute;
  left: -9999px; /* Move off-screen */
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  opacity: 0;
  pointer-events: none; /* Prevent interaction */
  border: 0;
  padding: 0;
  margin: -1px;
}
